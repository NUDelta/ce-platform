 	//add sub to need
    if (submissions[i].content.busy == "busy") {
      const characters = [sub., "murderer"]
    } else {
      const characters = [coffee, "innocent"]
    }

    let participant = Meteor.users.find({
      "_id": sub.uid,
    })

    DROPDOWN_OPTIONS = 


    //this function creates a need using existing context, then adds the submission info to that need
    experience.contributionTypes = [...experience.contributionTypes, ...addStaticAffordanceToNeeds(submissions[i].content.busy, ((characters) => 
      characters.map(character => {
        const [detectorName, role, instruction] = character;
        return {
          needName: `Murder Mystery ${role}`,
          situation: {
            detector: getDetectorId(DETECTORS[detectorName]),
            number: 3
          },
          participateTemplate: 'murderMysteryChat',
          toPass: {
          	role: role,
            //instruction: `${instruction}`,
            dropdownChoices: {
              name: values,
              options: DROPDOWN_OPTIONS
            }
          },
          numberNeeded: 3,
          // notificationDelay: 90 uncomment for testing
        }
      })
    )(characters))];


    addStaticAffordanceToNeeds(submissions[i].content.busy, )